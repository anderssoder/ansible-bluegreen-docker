---
- name: do blue/green logic
  include: pre_tasks.yml
  when: bluegreen

- name: log into private docker registry
  docker_login:
    registry: "{{ app_registry }}"
    username: "{{ app_registry_username| d(lookup('env', 'REGISTRY_PULL_USERNAME')) }}"
    password: "{{ app_registry_password| d(lookup('env', 'REGISTRY_PULL_PASSWORD')) }}"
    reauthorize: yes
  when: app_private_registry
  tags:
    - app:registry

- debug: msg="DEPLOYING {{ app_name }}.{% if bluegreen %}
    Color of this deploy is {{ next_color| upper }}.{% endif %}
    Version is {{ app_version }}"
  run_once: yes
  tags:
    - app:info
    - app:deploy

- block:
    - name: deploy app
      docker_container:
        name: "{{ app_name }}{% if bluegreen %}_{{ next_color }}{% endif %}_{{ item }}"
        state: started
        ports: all
        recreate: yes
        image: "{{ app_repo | d(app_name) }}:{{ app_version }}"
        command: "{{ app_command | d() }}"
        restart_policy: unless-stopped
        etc_hosts: "{{ app_etc_hosts | d({}) }}"
        log_driver: journald
        log_options:
          tag: "{{ app_name }}"
        env: "{{ app_env | d({}) }}"
      with_sequence: count={{ app_instances_count }}
      check_mode: "{{ check_mode }}"
      register: deploy
      tags:
        - app:deploy
        - skip_ansible_lint
  rescue:
    - name: cleanup dead containers
      command: docker rm -f $(docker ps -aq -f status=dead)

- name: detect app ports
  set_fact:
    app_ports: "{{ deploy.results| map(attribute='ansible_facts.ansible_docker_container.NetworkSettings.Ports')| list }}"
  tags:
    - app:deploy

- name: app health check
  uri:
    url: "http://{% if item.values()[0][0].HostIp == '0.0.0.0' %}127.0.0.1{% else %}{{ item.values()[0][0].HostIp }}{% endif %}:{{ item.values()[0][0].HostPort }}/{{ app_health_check_path | d('') }}"
    method: GET
    status_code: 200
  with_items:
    - "{{ app_ports }}"
  tags:
    - app:deploy

- name: generate nginx config for app
  template:
    src: etc/nginx/conf.d/app.conf.j2
    dest: "/etc/nginx/conf.d/{{ app_name }}.conf"
    backup: yes
  notify:
    - make test request
  tags:
    - app:nginx

- name: check nginx configuration
  command: nginx -t -c /etc/nginx/nginx.conf
  tags:
    - app:nginx
    - skip_ansible_lint

- name: reload nginx
  service: name=nginx state=reloaded
  tags:
    - app:nginx

- name: do blue/green logic
  include: post_tasks.yml
  when: bluegreen

# vim: set et fenc= ft=ansible sts=0 sw=2 ts=2 tw=0 :
